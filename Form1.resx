<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAB
        AAAAAAAAH3UoADx+RgBFeUsAb2ZmAIpDAwCSSQkAj0gQAKJPDQCmVxEAp1oUAKxfGQC0Xx8AhU4jAJVT
        JwCjXTEAumshAMddEQDEdSsAx3ktAMt9LgAAAAAAwHw7ANB+NACSaUoAn3JGAKRzQACNf38ALII2ADSE
        PQAykT4API1FADWVQQA0mUQAOJhGADyXSwA6nUkAPaFNAEOYTQBTlEMAR5xSAH+ZRgBDpFEASahXAE6g
        XwBErVgASq5aAEixVgBGs1kASbNaAFCzXwBjpF8AZIxoAGmIawByj3cAeJ9/AE2oYgBTpGEAVbNiAFuy
        ZwBUu2UAV7toAFu6agBuq2YAdKZ3AHqtfgBns3QAZL5xAGy3eABpvHoAVsFmAFvDbABfxHEAXslxAGPL
        cwBsxHkAZ895AGrMegBm0XUAbdF9ANuILgDOgDUAzoE7ANCAMwDThDsA2os5AI2PVQCwgVUAvIVVAL+J
        VwCXgXAAooBgAKCrdQDPiEcAxYRJAMmKTADQiUMA1otIAN2QRADAiVsA0JJTAN2WUADbmFsA65dHAOSY
        RwDklkkA6plNAOKZUgDrnFAA8qFOAOqmXQD1o1UA9qVYAPimWAD9rFwA/rFfAMSPaQDDk2oA2qZvANGp
        agDWqH8A7KZiAPWqYwD8rWEA/7JkAP+0agD/uWwA6KtzAOSsfwD0rXMA/65wAP+7cwD/vXgA/8R8AP/I
        fAB6rYMAXNGGAGTMgQB0y4EAeMuIAH/KiwBr0oAActGDAHHagwB214wAedOIAHzRigB71IgAfdaLAH/S
        jQB91IwAfNuLAHnllACGoYoAhqeLAISuigCHuY4Agr2MAI2/kgD/r4IA4LKGAPSyhgD0u4UA8b6OAIPH
        jQCDyowAgNuPAI/JlgCRyJkAhNWRAIjWlQCG2pQAitiXAIzWmACH2ZgAjNiZAJHUmwCY1Z8AkdmcAI/n
        ngCX06EAmdSiAJXaoQCa26UAndyoAKPdrACq3rIAmuClAJ3gpgCa5aYAn+CsAKXirwCv4rMAruG2AK7h
        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
        wf/+H///////////////////
</value>
  </data>
</root>